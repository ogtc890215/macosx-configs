# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:/usr/local/sbin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel9k/powerlevel9k"

#powerlevel9k
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(user dir dir_writable rbenv vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status anaconda ram load background_jobs time)
POWERLEVEL9K_USER_ICON="\uF415"
POWERLEVEL9K_ROOT_ICON="#"
POWERLEVEL9K_MODE='nerdfont-complete'

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  adb brew cp docker git gnu-utils go gradle man npm python repo sudo xcode
  command-not-found \local osx
)

source $ZSH/oh-my-zsh.sh

# User configuration

export MANPATH="/Users/guqi/Tools/adt-bundle-mac-x86_64/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#alias
alias sgrep='grep -R -n -H --exclude-dir={.git,.svn,CVS,.bzr,.hg} '
alias free='ruby ~/Tools/scripts/free-memory.rb'
alias mongod='mongod --dbpath ~/Developer/MongoDB/db'
alias octave='octave --no-gui'
alias gnuman='man -M /usr/local/opt/coreutils/libexec/gnuman'

#compatible for ruby
setopt no_nomatch

#compatible for bash
setopt sh_word_split
export HOSTNAME=$HOST

#history
unsetopt inc_append_history
unsetopt share_history

#zsh-completions
fpath=(/usr/local/share/zsh-completions $fpath)

#java
export JAVA_HOME=`/usr/libexec/java_home`

#golang
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=/Volumes/freedom/go:/Users/guqi/Documents/go
export GOBIN=/Users/guqi/Documents/go/bin

#android
export ANDROID_SDK=$HOME/Tools/adt-bundle-mac-x86_64/sdk
export ANDROID_SDK_BIN=${ANDROID_SDK}/tools/bin:${ANDROID_SDK}/tools:${ANDROID_SDK}/platform-tools:${ANDROID_SDK}/build-tools/current
export ANDROID_NDK=${ANDROID_SDK}/ndk-bundle
export ANDROID_PROJECT_VERSION_FILE=$HOME/Documents/github/owner/android-studio-gradle-versions/versions.gradle

#flutter
#export PUB_HOSTED_URL=https://pub.flutter-io.cn
#export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn
export FLUTTER_SDK=$HOME/Tools/flutter
export FLUTTER_SDK_BIN=$FLUTTER_SDK/bin
export DART_SDK=$FLUTTER_SDK_BIN/cache/dart-sdk
export DART_SDK_BIN=$DART_SDK/bin
export DART_PUB_BIN=$HOME/.pub-cache/bin

#ccache
export CCACHE_BIN=/usr/local/opt/ccache/libexec

#anaconda
export PYTHONPATH=/usr/local:$PYTHONPATH
export ANACONDA_HOME=$HOME/anaconda2

#dotnet
export DOTNET_PATH=/usr/local/share/dotnet
export PATH=$DOTNET_PATH:$PATH

#rvm
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

#nvm
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion

function myconda {
    local PROJ=$1
    cd $ANACONDA_HOME/envs/$PROJ
    source $ANACONDA_HOME/bin/activate $PROJ
}

function deanaconda {
    source $ANACONDA_HOME/bin/deactivate
}

function caffe2 {
    cd $ANACONDA_HOME/envs/Caffe2
    source $ANACONDA_HOME/bin/activate Caffe2
    python -c 'from caffe2.python import core' 2>/dev/null && echo "Success" || echo "Failure"
}

function tensorflow {
    cd $ANACONDA_HOME/envs/tensorflow
    source $ANACONDA_HOME/bin/activate tensorflow
    python validate.py 2>/dev/null
}

#User PATH
export PATH=$GOBIN:$DART_PUB_BIN:$DART_SDK_BIN:$FLUTTER_SDK_BIN:$ANDROID_SDK_BIN:$ANDROID_NDK:$PATH

# cuda
export CUDA_HOME="/usr/local/cuda"
export DYLD_LIBRARY_PATH="$CUDA_HOME/lib:$CUDA_HOME/extras/CUPTI/lib:$DYLD_LIBRARY_PATH"
export LD_LIBRARY_PATH="$CUDA_HOME/lib:$CUDA_HOME/extras/CUPTI/lib:$LD_LIBRARY_PATH"
export PATH="$CUDA_HOME/bin:$PATH"

# vulkan
export VULKAN_VERSION=1.1.82.0
export VULKAN_SDK=/usr/local/Caskroom/vulkan-sdk/${VULKAN_VERSION}/macOS
export VK_ICD_FILENAMES=${VULKAN_SDK}/etc/vulkan/icd.d/MoltenVK_icd.json
export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${VULKAN_SDK}/lib
export VK_LAYER_PATH=${VULKAN_SDK}/etc/vulkan/explicit_layer.d

#brew
export HOMEBREW_INSTALL_CLEANUP=true

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
